<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
typedef int[1,2] myID;

int count = 0;
int prevID = 1;
int has_cs=0;
const int c =4; 
const int CS =30;
const int delay = 5;
const int delayControl = 4*c;
</declaration><template><name x="5" y="5">GProcess</name><parameter>const myID ID</parameter><declaration>// Place local declarations here.
clock sleeptime;// to model the sleep time
clock exec;// to model constraints on execution times

</declaration><location id="id0" x="-440" y="-32"><name x="-456" y="-80">Control</name><label kind="invariant" x="-456" y="-64">exec &lt;= delayControl</label></location><location id="id1" x="184" y="-216"><name x="112" y="-216">waiting</name><label kind="invariant" x="112" y="-200">sleeptime&lt;=delay</label></location><location id="id2" x="-464" y="-296"><name x="-448" y="-304">L3goto</name><label kind="invariant" x="-456" y="-288">exec &lt;= c</label></location><location id="id3" x="-136" y="-32"><name x="-128" y="-16">Lk_next</name><label kind="invariant" x="-128" y="0">exec &lt;= c</label></location><location id="id4" x="-136" y="-112"><name x="-200" y="-120">L4toLk</name><label kind="invariant" x="-224" y="-104">exec &lt;= CS</label></location><location id="id5" x="-136" y="-216"><name x="-128" y="-208">L3</name><label kind="invariant" x="-128" y="-192">exec &lt;= c</label></location><location id="id6" x="184" y="-296"><name x="152" y="-328">L2</name><label kind="invariant" x="96" y="-312">exec &lt;= c</label></location><location id="id7" x="-128" y="-296"><name x="-160" y="-296">L1</name><label kind="invariant" x="-160" y="-280">exec &lt;= c</label></location><location id="id8" x="8" y="-408"><name x="32" y="-432">L0goto</name><label kind="invariant" x="32" y="-416">exec &lt;= c</label></location><location id="id9" x="-128" y="-408"><name x="-208" y="-464">L0</name><label kind="invariant" x="-208" y="-448">exec &lt;= c</label></location><init ref="id9"/><transition><source ref="id0"/><target ref="id9"/><label kind="guard" x="-480" y="-480">exec &gt;= delayControl</label><label kind="assignment" x="-480" y="-464">exec = 0</label><nail x="-488" y="-32"/><nail x="-488" y="-480"/><nail x="-128" y="-480"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="-376" y="32">prevID != ID || count &gt;= 5</label><label kind="assignment" x="-376" y="48">prevID = ID,
count = 1,
exec = 0</label><nail x="-168" y="32"/><nail x="-416" y="32"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="-376" y="-32">prevID == ID &amp;&amp; count &lt; 5</label><label kind="assignment" x="-376" y="-16">exec = 0,
count++</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="guard" x="-120" y="-96">exec &gt;= CS</label><label kind="assignment" x="-120" y="-80">exec = 0,
has_cs = 0</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="guard" x="-232" y="-176">has_cs == ID</label><label kind="assignment" x="-232" y="-160">exec = 0</label></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-296" y="-216">has_cs != ID</label><label kind="assignment" x="-464" y="-200">exec = 0</label><nail x="-464" y="-216"/></transition><transition><source ref="id1"/><target ref="id5"/><label kind="guard" x="-48" y="-232">sleeptime == delay</label><label kind="assignment" x="-48" y="-216">exec = 0</label></transition><transition><source ref="id2"/><target ref="id9"/><label kind="assignment" x="-456" y="-408">exec = 0</label><nail x="-464" y="-408"/><nail x="-144" y="-408"/></transition><transition><source ref="id9"/><target ref="id7"/><label kind="guard" x="-424" y="-368">has_cs == 0 &amp; ( prevID != ID | count &lt; 5)</label><label kind="assignment" x="-200" y="-352">exec = 0</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="assignment" x="-40" y="-328">has_cs = ID,
exec = 0</label></transition><transition><source ref="id6"/><target ref="id1"/><label kind="assignment" x="80" y="-264">sleeptime = 0</label><nail x="184" y="-264"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="-104" y="-392">has_cs != 0 &amp;&amp; exec &gt; 1</label><label kind="assignment" x="-104" y="-408">exec = 0</label></transition><transition><source ref="id8"/><target ref="id9"/><label kind="assignment" x="-48" y="-472">exec = 0</label><nail x="-64" y="-472"/></transition></template><system>// This command is special it instanciate any 
// possible instance of Process with distinct parameters.
// As myID is in {1,2} there will be two instances. 
system GProcess;</system></nta>